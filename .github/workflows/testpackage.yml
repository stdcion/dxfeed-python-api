# This workflow will check package installation and runs tests on PR
name: Test on PR

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  installation:
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.7, 3.8, 3.9]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      uses: abatilo/actions-poetry@v2

    - name: Set poetry env
      run: |
        pip install --upgrade pip
        pip install taskipy cython toml
        poetry install
        task build -f sdist
        # pip uninstall --yes taskipy cython
      shell: bash

    - name: Install package artifact
      run: |
        sudo apt-get install make build-essential libssl-dev zlib1g-dev \
        libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm \
        libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev libffi-dev liblzma-dev
        # Run automatic pyenv installer
        curl https://pyenv.run | bash

        # Configure bash shell
        echo 'export PYENV_ROOT="$HOME/.pyenv"' >> ~/.bashrc
        echo 'command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"' >> ~/.bashrc
        echo 'eval "$(pyenv init -)"' >> ~/.bashrc

        # Restart bash shell
        bash

        export PATH="$HOME/.pyenv/bin:$PATH"

        # Install python 3.9.16
        pyenv install 3.9.16

        # Set python 3.9.16 as global
        pyenv global 3.9.16
        pyenv local 3.9.16

        # Check python version
        /home/runner/.pyenv/versions/3.9.16/bin/python python --version
        /home/runner/.pyenv/versions/3.9.16/bin/python -m pip install dist/dxfeed*
        echo "import dxfeed as dx" >> import_test.py
        /home/runner/.pyenv/versions/3.9.16/bin/python import_test.py
        pip uninstall --yes dxfeed
      shell: bash

  tests:
    needs: installation
    strategy:
      matrix:
        os: [ubuntu-20.04, ubuntu-latest, windows-latest, macos-latest]
        python-version: [3.7, 3.8, 3.9]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      uses: abatilo/actions-poetry@v2

    - name: Set poetry env
      run: |
        pip install --upgrade pip
        pip install taskipy cython toml
        poetry install
      shell: bash

    - name: Run tests
      run: |
        poetry run task test
      shell: bash

    - name: Generate doc
      if: matrix.os == 'ubuntu-20.04' && matrix.python-version == 3.7
      run: |
        poetry run task html_docs
      shell: bash
